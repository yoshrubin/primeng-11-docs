!function(){function e(e,t){var o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!o){if(Array.isArray(e)||(o=function(e,t){if(e){if("string"==typeof e)return n(e,t);var o={}.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){o&&(e=o);var a=0,i=function(){};return{s:i,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,r=!0,s=!1;return{s:function(){o=o.call(e)},n:function(){var e=o.next();return r=e.done,e},e:function(e){s=!0,l=e},f:function(){try{r||null==o.return||o.return()}finally{if(s)throw l}}}}function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}function t(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,i(o.key),o)}}function a(e,n,t){return n&&o(e.prototype,n),t&&o(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function i(e){var n=function(e,n){if("object"!=typeof e||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var o=t.call(e,n||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"==typeof n?n:n+""}(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{UEWY:function(n,o,i){"use strict";i.r(o),i.d(o,"GMapDemoModule",function(){return K});var l,r,s=i("ofXK"),c=i("3Pt+"),b=i("tyNb"),p=i("ByAP"),g=i("fXoL"),d=i("K+Em"),v=i("drlH"),m=((r=function(){return a(function e(n,o,a,i){t(this,e),this.el=n,this.cd=a,this.zone=i,this.onMapClick=new g.n,this.onOverlayClick=new g.n,this.onOverlayDblClick=new g.n,this.onOverlayDragStart=new g.n,this.onOverlayDrag=new g.n,this.onOverlayDragEnd=new g.n,this.onMapReady=new g.n,this.onMapDragEnd=new g.n,this.onZoomChanged=new g.n,this.differ=o.find([]).create(null)},[{key:"ngAfterViewChecked",value:function(){!this.map&&this.el.nativeElement.offsetParent&&this.initialize()}},{key:"initialize",value:function(){var n=this;if(this.map=new google.maps.Map(this.el.nativeElement.children[0],this.options),this.onMapReady.emit({map:this.map}),this.overlays){var t,o=e(this.overlays);try{for(o.s();!(t=o.n()).done;){var a=t.value;a.setMap(this.map),this.bindOverlayEvents(a)}}catch(i){o.e(i)}finally{o.f()}}this.map.addListener("click",function(e){n.zone.run(function(){n.onMapClick.emit(e)})}),this.map.addListener("dragend",function(e){n.zone.run(function(){n.onMapDragEnd.emit(e)})}),this.map.addListener("zoom_changed",function(e){n.zone.run(function(){n.onZoomChanged.emit(e)})})}},{key:"bindOverlayEvents",value:function(e){var n=this;e.addListener("click",function(t){n.zone.run(function(){n.onOverlayClick.emit({originalEvent:t,overlay:e,map:n.map})})}),e.addListener("dblclick",function(t){n.zone.run(function(){n.onOverlayDblClick.emit({originalEvent:t,overlay:e,map:n.map})})}),e.getDraggable()&&this.bindDragEvents(e)}},{key:"ngDoCheck",value:function(){var e=this,n=this.differ.diff(this.overlays);n&&this.map&&(n.forEachRemovedItem(function(e){google.maps.event.clearInstanceListeners(e.item),e.item.setMap(null)}),n.forEachAddedItem(function(n){n.item.setMap(e.map),n.item.addListener("click",function(t){e.zone.run(function(){e.onOverlayClick.emit({originalEvent:t,overlay:n.item,map:e.map})})}),n.item.getDraggable()&&e.bindDragEvents(n.item)}))}},{key:"bindDragEvents",value:function(e){var n=this;e.addListener("dragstart",function(t){n.zone.run(function(){n.onOverlayDragStart.emit({originalEvent:t,overlay:e,map:n.map})})}),e.addListener("drag",function(t){n.zone.run(function(){n.onOverlayDrag.emit({originalEvent:t,overlay:e,map:n.map})})}),e.addListener("dragend",function(t){n.zone.run(function(){n.onOverlayDragEnd.emit({originalEvent:t,overlay:e,map:n.map})})})}},{key:"getMap",value:function(){return this.map}}])}()).\u0275fac=function(e){return new(e||r)(g.Jb(g.l),g.Jb(g.s),g.Jb(g.h),g.Jb(g.z))},r.\u0275cmp=g.Db({type:r,selectors:[["p-gmap"]],inputs:{style:"style",styleClass:"styleClass",options:"options",overlays:"overlays"},outputs:{onMapClick:"onMapClick",onOverlayClick:"onOverlayClick",onOverlayDblClick:"onOverlayDblClick",onOverlayDragStart:"onOverlayDragStart",onOverlayDrag:"onOverlayDrag",onOverlayDragEnd:"onOverlayDragEnd",onMapReady:"onMapReady",onMapDragEnd:"onMapDragEnd",onZoomChanged:"onZoomChanged"},decls:1,vars:3,consts:[[3,"ngStyle"]],template:function(e,n){1&e&&g.Lb(0,"div",0),2&e&&(g.zb(n.styleClass),g.ic("ngStyle",n.style))},directives:[s.m],encapsulation:2,changeDetection:0}),r),y=((l=a(function e(){t(this,e)})).\u0275mod=g.Hb({type:l}),l.\u0275inj=g.Gb({factory:function(e){return new(e||l)},imports:[[s.b]]}),l),u=i("q5e5"),h=i("WDBf"),f=i("Qx9H"),k=i("+jnZ"),P=i("OXhD"),E=i("mWoB"),M=i("46gc"),Q=function(){return{"margin-top":".25em"}};function w(e,n){if(1&e){var t=g.Sb();g.Qb(0,"div",21),g.Qb(1,"div",22),g.Qb(2,"label",23),g.Ec(3,"Label"),g.Pb(),g.Pb(),g.Qb(4,"div",24),g.Qb(5,"input",25),g.Yb("ngModelChange",function(e){return g.vc(t),g.cc().markerTitle=e}),g.Pb(),g.Pb(),g.Qb(6,"div",22),g.Qb(7,"label",26),g.Ec(8,"Lat"),g.Pb(),g.Pb(),g.Qb(9,"div",24),g.Lb(10,"input",27),g.Pb(),g.Qb(11,"div",22),g.Qb(12,"label",28),g.Ec(13,"Lng"),g.Pb(),g.Pb(),g.Qb(14,"div",24),g.Lb(15,"input",29),g.Pb(),g.Qb(16,"div",22),g.Qb(17,"label",30),g.Ec(18,"Drag"),g.Pb(),g.Pb(),g.Qb(19,"div",24),g.Qb(20,"p-checkbox",31),g.Yb("ngModelChange",function(e){return g.vc(t),g.cc().draggable=e}),g.Pb(),g.Pb(),g.Pb()}if(2&e){var o=g.cc();g.xb(5),g.ic("ngModel",o.markerTitle),g.xb(5),g.ic("ngModel",o.selectedPosition.lat()),g.xb(5),g.ic("ngModel",o.selectedPosition.lng()),g.xb(5),g.Ac(g.kc(6,Q)),g.ic("ngModel",o.draggable)}}function C(e,n){if(1&e){var t=g.Sb();g.Qb(0,"div"),g.Qb(1,"button",32),g.Yb("click",function(){return g.vc(t),g.cc().addMarker()}),g.Pb(),g.Pb()}}var O,D,x,L=function(){return{width:"100%",height:"320px","margin-bottom":"1em"}},I=function(){return{width:"300px"}},S=((D=function(){return a(function e(n){t(this,e),this.messageService=n},[{key:"ngOnInit",value:function(){this.options={center:{lat:36.890257,lng:30.707417},zoom:12},this.initOverlays(),this.infoWindow=new google.maps.InfoWindow}},{key:"handleMapClick",value:function(e){this.dialogVisible=!0,this.selectedPosition=e.latLng}},{key:"handleOverlayClick",value:function(e){if(null!=e.overlay.getTitle){var n=e.overlay.getTitle();this.infoWindow.setContent("<div>"+n+"</div>"),this.infoWindow.open(e.map,e.overlay),e.map.setCenter(e.overlay.getPosition()),this.messageService.add({severity:"info",summary:"Marker Selected",detail:n})}else this.messageService.add({severity:"info",summary:"Shape Selected",detail:""})}},{key:"addMarker",value:function(){this.overlays.push(new google.maps.Marker({position:{lat:this.selectedPosition.lat(),lng:this.selectedPosition.lng()},title:this.markerTitle,draggable:this.draggable})),this.markerTitle=null,this.dialogVisible=!1}},{key:"handleDragEnd",value:function(e){this.messageService.add({severity:"info",summary:"Marker Dragged",detail:e.overlay.getTitle()})}},{key:"initOverlays",value:function(){this.overlays&&this.overlays.length||(this.overlays=[new google.maps.Marker({position:{lat:36.879466,lng:30.667648},title:"Konyaalti"}),new google.maps.Marker({position:{lat:36.883707,lng:30.689216},title:"Ataturk Park"}),new google.maps.Marker({position:{lat:36.885233,lng:30.702323},title:"Oldtown"}),new google.maps.Polygon({paths:[{lat:36.9177,lng:30.7854},{lat:36.8851,lng:30.7802},{lat:36.8829,lng:30.8111},{lat:36.9177,lng:30.8159}],strokeOpacity:.5,strokeWeight:1,fillColor:"#1976D2",fillOpacity:.35}),new google.maps.Circle({center:{lat:36.90707,lng:30.56533},fillColor:"#1976D2",fillOpacity:.35,strokeWeight:1,radius:1500}),new google.maps.Polyline({path:[{lat:36.86149,lng:30.63743},{lat:36.86341,lng:30.72463}],geodesic:!0,strokeColor:"#FF0000",strokeOpacity:.5,strokeWeight:2})])}},{key:"zoomIn",value:function(e){e.setZoom(e.getZoom()+1)}},{key:"zoomOut",value:function(e){e.setZoom(e.getZoom()-1)}},{key:"clear",value:function(){this.overlays=[]}}])}()).\u0275fac=function(e){return new(e||D)(g.Jb(p.i))},D.\u0275cmp=g.Db({type:D,selectors:[["ng-component"]],features:[g.wb([p.i])],decls:233,vars:10,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","gmap"],[1,"content-section","implementation"],[1,"card"],[3,"options","overlays","onMapClick","onOverlayClick","onOverlayDragEnd"],["gmap",""],["type","button","pButton","","label","Clear","icon","pi pi-times",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom In","icon","pi pi-plus",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom Out","icon","pi pi-minus",3,"click"],["showEffect","fade","header","New Location",3,"visible","visibleChange"],["class","p-grid p-fluid",4,"ngIf"],["pTemplate","footer"],[1,"content-section","documentation"],["header","Documentation"],["lang","typescript"],["lang","markup"],[1,"doc-tablewrapper"],[1,"doc-table"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/gmap","target","_blank",1,"btn-viewsource"],[1,"p-grid","p-fluid"],[1,"p-col-2"],["for","title"],[1,"p-col-10"],["type","text","pInputText","","id","title",3,"ngModel","ngModelChange"],["for","lat"],["id","lat","type","text","readonly","","pInputText","",3,"ngModel"],["for","lng"],["id","lng","type","text","readonly","","pInputText","",3,"ngModel"],["for","drg"],["binary","true",3,"ngModel","ngModelChange"],["type","button","pButton","","label","Add Marker","icon","pi pi-plus",3,"click"]],template:function(e,n){if(1&e){var t=g.Sb();g.Qb(0,"div",0),g.Qb(1,"div",1),g.Qb(2,"h1"),g.Ec(3,"GMap"),g.Pb(),g.Qb(4,"p"),g.Ec(5,"GMap component provides integration with Google Maps API. This sample demontrates various uses cases like binding, overlays and events. Click the map to add a new item."),g.Pb(),g.Pb(),g.Lb(6,"app-demoActions",2),g.Pb(),g.Qb(7,"div",3),g.Lb(8,"p-toast"),g.Qb(9,"div",4),g.Qb(10,"p-gmap",5,6),g.Yb("onMapClick",function(e){return n.handleMapClick(e)})("onOverlayClick",function(e){return n.handleOverlayClick(e)})("onOverlayDragEnd",function(e){return n.handleDragEnd(e)}),g.Pb(),g.Qb(12,"button",7),g.Yb("click",function(){return n.clear()}),g.Pb(),g.Qb(13,"button",8),g.Yb("click",function(){g.vc(t);var e=g.uc(11);return n.zoomIn(e.getMap())}),g.Pb(),g.Qb(14,"button",9),g.Yb("click",function(){g.vc(t);var e=g.uc(11);return n.zoomOut(e.getMap())}),g.Pb(),g.Qb(15,"p-dialog",10),g.Yb("visibleChange",function(e){return n.dialogVisible=e}),g.Cc(16,w,21,7,"div",11),g.Cc(17,C,2,0,"ng-template",12),g.Pb(),g.Pb(),g.Pb(),g.Qb(18,"div",13),g.Qb(19,"p-tabView"),g.Qb(20,"p-tabPanel",14),g.Qb(21,"h5"),g.Ec(22,"Import"),g.Pb(),g.Qb(23,"app-code",15),g.Kb(),g.Ec(24,"\nimport {GMapModule} from 'primeng/gmap';\n"),g.Rb(),g.Pb(),g.Qb(25,"h5"),g.Ec(26,"Getting Started"),g.Pb(),g.Qb(27,"p"),g.Ec(28,"A map is initialized with options and dimensions. Refer to the google maps api for the list of available options."),g.Pb(),g.Qb(29,"app-code",16),g.Kb(),g.Ec(30,"\n<p-gmap [options]=\"options\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),g.Rb(),g.Pb(),g.Qb(31,"app-code",15),g.Kb(),g.Ec(32,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n}\n"),g.Rb(),g.Pb(),g.Qb(33,"h5"),g.Ec(34,"Overlays"),g.Pb(),g.Qb(35,"p"),g.Ec(36,"GMap can display any type of overlay such as markers, polygons and circles. Overlay instances are bound using the overlays property array. Overlays are aware of one-way binding so whenever the array changes, gmap updates itself."),g.Pb(),g.Qb(37,"app-code",16),g.Kb(),g.Ec(38,"\n<p-gmap [options]=\"options\" [overlays]=\"overlays\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),g.Rb(),g.Pb(),g.Qb(39,"app-code",15),g.Kb(),g.Ec(40,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n}\n"),g.Rb(),g.Pb(),g.Qb(41,"h5"),g.Ec(42,"Events"),g.Pb(),g.Qb(43,"p"),g.Ec(44,"GMap provides common callbacks to hook into events including map click, overlay click and overlay dragging."),g.Pb(),g.Qb(45,"app-code",16),g.Kb(),g.Ec(46,'\n<p-gmap [options]="options" [overlays]="overlays" [style]="{\'width\':\'100%\',\'height\':\'320px\'}"\n            (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)"></p-gmap>\n'),g.Rb(),g.Pb(),g.Qb(47,"app-code",15),g.Kb(),g.Ec(48,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n\n    handleMapClick(event) {\n        //event: MouseEvent of Google Maps api\n    }\n\n    handleOverlayClick(event) {\n        //event.originalEvent: MouseEvent of Google Maps api\n        //event.overlay: Clicked overlay\n        //event.map: Map instance\n    }\n}\n"),g.Rb(),g.Pb(),g.Qb(49,"h5"),g.Ec(50,"Google Maps API"),g.Pb(),g.Qb(51,"p"),g.Ec(52,"In case you need to access the map instance directly, use the getMap() method."),g.Pb(),g.Qb(53,"app-code",16),g.Kb(),g.Ec(54,'\n<p-gmap #gmap [options]="options"></p-gmap>\n\n<button type="button" pButton label="Zoom In" icon="pi-search-plus" (click)="zoomIn(gmap.getMap())"></button>\n'),g.Rb(),g.Pb(),g.Qb(55,"app-code",15),g.Kb(),g.Ec(56,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n}\n"),g.Rb(),g.Pb(),g.Qb(57,"p"),g.Ec(58,"Another option is to to get the map object directly after init via (onMapReady) event. In the example below, google.maps.Map is used for adjusting map bounds to markers."),g.Pb(),g.Qb(59,"app-code",16),g.Kb(),g.Ec(60,'\n<p-gmap #gmap [options]="options" [overlays]="overlays" [style]="mapStyle"\n    (onMapReady)="setMap($event)"></p-gmap>\n'),g.Rb(),g.Pb(),g.Qb(61,"p"),g.Ec(62,"Then from your component you would write"),g.Pb(),g.Qb(63,"app-code",15),g.Kb(),g.Ec(64,'\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    map: google.maps.Map;\n\n    setMap(event) {\n        this.map = event.map;\n    }\n\n    ngOnInit() {\n        let bounds = new google.maps.LatLngBounds();\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:"Konyaalti"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:"Ataturk Park"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:"Oldtown"}),\n        ]\n        // ... extend bounds\n        this.overlays.forEach(marker => {\n            bounds.extend(marker.getPosition());\n        });\n\n        setTimeout(()=> { // map will need some time to load\n            this.map.fitBounds(bounds); // Map object used directly\n        }, 1000);\n    }\n}\n'),g.Rb(),g.Pb(),g.Qb(65,"h5"),g.Ec(66,"Properties"),g.Pb(),g.Qb(67,"div",17),g.Qb(68,"table",18),g.Qb(69,"thead"),g.Qb(70,"tr"),g.Qb(71,"th"),g.Ec(72,"Name"),g.Pb(),g.Qb(73,"th"),g.Ec(74,"Type"),g.Pb(),g.Qb(75,"th"),g.Ec(76,"Default"),g.Pb(),g.Qb(77,"th"),g.Ec(78,"Description"),g.Pb(),g.Pb(),g.Pb(),g.Qb(79,"tbody"),g.Qb(80,"tr"),g.Qb(81,"td"),g.Ec(82,"options"),g.Pb(),g.Qb(83,"td"),g.Ec(84,"any"),g.Pb(),g.Qb(85,"td"),g.Ec(86,"null"),g.Pb(),g.Qb(87,"td"),g.Ec(88,"Google Maps API configuration object."),g.Pb(),g.Pb(),g.Qb(89,"tr"),g.Qb(90,"td"),g.Ec(91,"overlays"),g.Pb(),g.Qb(92,"td"),g.Ec(93,"array"),g.Pb(),g.Qb(94,"td"),g.Ec(95,"null"),g.Pb(),g.Qb(96,"td"),g.Ec(97,"An array of overlays to display."),g.Pb(),g.Pb(),g.Qb(98,"tr"),g.Qb(99,"td"),g.Ec(100,"style"),g.Pb(),g.Qb(101,"td"),g.Ec(102,"string"),g.Pb(),g.Qb(103,"td"),g.Ec(104,"null"),g.Pb(),g.Qb(105,"td"),g.Ec(106,"Inline style of the component."),g.Pb(),g.Pb(),g.Qb(107,"tr"),g.Qb(108,"td"),g.Ec(109,"styleClass"),g.Pb(),g.Qb(110,"td"),g.Ec(111,"string"),g.Pb(),g.Qb(112,"td"),g.Ec(113,"null"),g.Pb(),g.Qb(114,"td"),g.Ec(115,"Style class of the component."),g.Pb(),g.Pb(),g.Pb(),g.Pb(),g.Pb(),g.Qb(116,"h5"),g.Ec(117,"Events"),g.Pb(),g.Qb(118,"div",17),g.Qb(119,"table",18),g.Qb(120,"thead"),g.Qb(121,"tr"),g.Qb(122,"th"),g.Ec(123,"Name"),g.Pb(),g.Qb(124,"th"),g.Ec(125,"Parameters"),g.Pb(),g.Qb(126,"th"),g.Ec(127,"Description"),g.Pb(),g.Pb(),g.Pb(),g.Qb(128,"tbody"),g.Qb(129,"tr"),g.Qb(130,"td"),g.Ec(131,"onMapClick"),g.Pb(),g.Qb(132,"td"),g.Ec(133,"event: Google Maps MouseEvent"),g.Pb(),g.Qb(134,"td"),g.Ec(135,"Callback to invoke when map is clicked except markers."),g.Pb(),g.Pb(),g.Qb(136,"tr"),g.Qb(137,"td"),g.Ec(138,"onMapDragEnd"),g.Pb(),g.Qb(139,"td"),g.Ec(140,"originalEvent: Google Maps dragend"),g.Lb(141,"br"),g.Pb(),g.Qb(142,"td"),g.Ec(143,"Callback to invoke when map drag (i.e. pan) has ended."),g.Pb(),g.Pb(),g.Qb(144,"tr"),g.Qb(145,"td"),g.Ec(146,"onMapReady"),g.Pb(),g.Qb(147,"td"),g.Ec(148,"event.map: Google Maps Instance"),g.Pb(),g.Qb(149,"td"),g.Ec(150,"Callback to invoke when the map is ready to be used."),g.Pb(),g.Pb(),g.Qb(151,"tr"),g.Qb(152,"td"),g.Ec(153,"onOverlayClick"),g.Pb(),g.Qb(154,"td"),g.Ec(155,"originalEvent: Google Maps MouseEvent "),g.Lb(156,"br"),g.Ec(157," overlay: Clicked overlay "),g.Lb(158,"br"),g.Ec(159," map: Map instance "),g.Lb(160,"br"),g.Pb(),g.Qb(161,"td"),g.Ec(162,"Callback to invoke when an overlay is clicked."),g.Pb(),g.Pb(),g.Qb(163,"tr"),g.Qb(164,"td"),g.Ec(165,"onOverlayDblClick"),g.Pb(),g.Qb(166,"td"),g.Ec(167,"originalEvent: Google Maps MouseEvent "),g.Lb(168,"br"),g.Ec(169," overlay: Clicked overlay "),g.Lb(170,"br"),g.Ec(171," map: Map instance "),g.Lb(172,"br"),g.Pb(),g.Qb(173,"td"),g.Ec(174,"Callback to invoke when an overlay is double clicked."),g.Pb(),g.Pb(),g.Qb(175,"tr"),g.Qb(176,"td"),g.Ec(177,"onOverlayDrag"),g.Pb(),g.Qb(178,"td"),g.Ec(179,"originalEvent: Google Maps MouseEvent "),g.Lb(180,"br"),g.Ec(181," overlay: Clicked overlay "),g.Lb(182,"br"),g.Ec(183," map: Map instance "),g.Lb(184,"br"),g.Pb(),g.Qb(185,"td"),g.Ec(186,"Callback to invoke when an overlay is being dragged."),g.Pb(),g.Pb(),g.Qb(187,"tr"),g.Qb(188,"td"),g.Ec(189,"onOverlayDragEnd"),g.Pb(),g.Qb(190,"td"),g.Ec(191,"originalEvent: Google Maps MouseEvent "),g.Lb(192,"br"),g.Ec(193," overlay: Clicked overlay "),g.Lb(194,"br"),g.Ec(195," map: Map instance "),g.Lb(196,"br"),g.Pb(),g.Qb(197,"td"),g.Ec(198,"Callback to invoke when an overlay drag ends."),g.Pb(),g.Pb(),g.Qb(199,"tr"),g.Qb(200,"td"),g.Ec(201,"onOverlayDragStart"),g.Pb(),g.Qb(202,"td"),g.Ec(203,"originalEvent: Google Maps MouseEvent "),g.Lb(204,"br"),g.Ec(205," overlay: Clicked overlay "),g.Lb(206,"br"),g.Ec(207," map: Map instance "),g.Lb(208,"br"),g.Pb(),g.Qb(209,"td"),g.Ec(210,"Callback to invoke when an overlay drag starts."),g.Pb(),g.Pb(),g.Qb(211,"tr"),g.Qb(212,"td"),g.Ec(213,"onZoomChanged"),g.Pb(),g.Qb(214,"td"),g.Ec(215,"originalEvent: Google Maps zoom_changed"),g.Pb(),g.Qb(216,"td"),g.Ec(217,"Callback to invoke when zoom level has changed."),g.Pb(),g.Pb(),g.Pb(),g.Pb(),g.Pb(),g.Qb(218,"h5"),g.Ec(219,"Dependencies"),g.Pb(),g.Qb(220,"p"),g.Ec(221,"Google Maps API."),g.Pb(),g.Pb(),g.Qb(222,"p-tabPanel",19),g.Qb(223,"a",20),g.Qb(224,"span"),g.Ec(225,"View on GitHub"),g.Pb(),g.Pb(),g.Qb(226,"app-code",16),g.Kb(),g.Ec(227,'\n<p-toast [style]="{marginTop: \'80px\'}"></p-toast>\n\n<p-gmap #gmap [style]="{\'width\':\'100%\',\'height\':\'320px\', \'margin-bottom\': \'1em\'}" [options]="options" [overlays]="overlays"\n       (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)" (onOverlayDragEnd)="handleDragEnd($event)"></p-gmap>\n\n<button type="button" pButton label="Clear" icon="pi pi-times" (click)="clear()" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom In" icon="pi pi-plus" (click)="zoomIn(gmap.getMap())" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom Out" icon="pi pi-minus" (click)="zoomOut(gmap.getMap())"></button>\n\n<p-dialog showEffect="fade" [(visible)]="dialogVisible" header="New Location" [style]="{width: \'300px\'}">>\n    <div class="p-grid p-fluid" *ngIf="selectedPosition">\n        <div class="p-col-2"><label for="title">Label</label></div>\n        <div class="p-col-10"><input type="text" pInputText id="title" [(ngModel)]="markerTitle"></div>\n\n        <div class="p-col-2"><label for="lat">Lat</label></div>\n        <div class="p-col-10"><input id="lat" type="text" readonly pInputText [ngModel]="selectedPosition.lat()"></div>\n\n        <div class="p-col-2"><label for="lng">Lng</label></div>\n        <div class="p-col-10"><input id="lng" type="text" readonly pInputText [ngModel]="selectedPosition.lng()"></div>\n\n        <div class="p-col-2"><label for="drg">Drag</label></div>\n        <div class="p-col-10"><p-checkbox [(ngModel)]="draggable" binary="true" [style]="{\'margin-top\':\'.25em\'}"></p-checkbox></div>\n    </div>\n    <ng-template pTemplate="footer">\n        <div>\n            <button type="button" pButton label="Add Marker" icon="pi-plus" (click)="addMarker()"></button>\n        </div>\n    </ng-template>\n</p-dialog>\n'),g.Rb(),g.Pb(),g.Qb(228,"app-code",15),g.Kb(),g.Ec(229,"\nexport class GMapDemo implements OnInit {\n\n    options: any;\n\n    overlays: any[];\n\n    dialogVisible: boolean;\n\n    markerTitle: string;\n\n    selectedPosition: any;\n\n    infoWindow: any;\n\n    draggable: boolean;\n\n    constructor(private messageService: MessageService) {}\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.initOverlays();\n\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n\n    handleMapClick(event) {\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n    }\n\n    handleOverlayClick(event) {\n        let isMarker = event.overlay.getTitle != undefined;\n\n        if (isMarker) {\n            let title = event.overlay.getTitle();\n            this.infoWindow.setContent('"),g.Qb(230,"div"),g.Ec(231,"' + title + '"),g.Pb(),g.Ec(232,"');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n\n            this.messageService.add({severity:'info', summary:'Marker Selected', detail: title});\n        }\n        else {\n            this.messageService.add({severity:'info', summary:'Shape Selected', detail: ''});\n        }\n    }\n\n    addMarker() {\n        this.overlays.push(new google.maps.Marker({position:{lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()}, title:this.markerTitle, draggable: this.draggable}));\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    }\n\n    handleDragEnd(event) {\n        this.messageService.add({severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()});\n    }\n\n    initOverlays() {\n        if (!this.overlays||!this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n                new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n                new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n                new google.maps.Polygon({paths: [\n                    {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n                }),\n                new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n                new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n            ];\n        }\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n\n    zoomOut(map) {\n        map.setZoom(map.getZoom()-1);\n    }\n\n    clear() {\n        this.overlays = [];\n    }\n}\n"),g.Rb(),g.Pb(),g.Pb(),g.Pb(),g.Pb()}2&e&&(g.xb(10),g.Ac(g.kc(8,L)),g.ic("options",n.options)("overlays",n.overlays),g.xb(5),g.Ac(g.kc(9,I)),g.ic("visible",n.dialogVisible),g.xb(1),g.ic("ngIf",n.selectedPosition))},directives:[d.a,v.a,m,u.b,h.a,s.l,f.c,k.b,k.a,P.a,c.a,E.a,c.f,c.i,M.a],styles:[".p-col-2[_ngcontent-%COMP%] {\n            display: flex;\n            align-self: center;\n        }"]}),D),z=((O=a(function e(){t(this,e)})).\u0275mod=g.Hb({type:O}),O.\u0275inj=g.Gb({factory:function(e){return new(e||O)},imports:[[b.g.forChild([{path:"",component:S}])],b.g]}),O),T=i("2Go5"),G=i("yxpR"),A=i("G8Ro"),R=i("Uxlh"),W=i("rklm"),Z=i("faTn"),K=((x=a(function e(){t(this,e)})).\u0275mod=g.Hb({type:x}),x.\u0275inj=g.Gb({factory:function(e){return new(e||x)},imports:[[s.b,c.b,z,y,T.a,R.a,G.a,A.a,W.a,Z.a,P.b,d.b]]}),x)}}])}();