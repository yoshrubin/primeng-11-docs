(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{UEWY:function(e,n,t){"use strict";t.r(n),t.d(n,"GMapDemoModule",function(){return z});var a=t("ofXK"),o=t("3Pt+"),i=t("tyNb"),l=t("ByAP"),s=t("fXoL"),r=t("K+Em"),b=t("drlH");let p=(()=>{class e{constructor(e,n,t,a){this.el=e,this.cd=t,this.zone=a,this.onMapClick=new s.n,this.onOverlayClick=new s.n,this.onOverlayDblClick=new s.n,this.onOverlayDragStart=new s.n,this.onOverlayDrag=new s.n,this.onOverlayDragEnd=new s.n,this.onMapReady=new s.n,this.onMapDragEnd=new s.n,this.onZoomChanged=new s.n,this.differ=n.find([]).create(null)}ngAfterViewChecked(){!this.map&&this.el.nativeElement.offsetParent&&this.initialize()}initialize(){if(this.map=new google.maps.Map(this.el.nativeElement.children[0],this.options),this.onMapReady.emit({map:this.map}),this.overlays)for(let e of this.overlays)e.setMap(this.map),this.bindOverlayEvents(e);this.map.addListener("click",e=>{this.zone.run(()=>{this.onMapClick.emit(e)})}),this.map.addListener("dragend",e=>{this.zone.run(()=>{this.onMapDragEnd.emit(e)})}),this.map.addListener("zoom_changed",e=>{this.zone.run(()=>{this.onZoomChanged.emit(e)})})}bindOverlayEvents(e){e.addListener("click",n=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:n,overlay:e,map:this.map})})}),e.addListener("dblclick",n=>{this.zone.run(()=>{this.onOverlayDblClick.emit({originalEvent:n,overlay:e,map:this.map})})}),e.getDraggable()&&this.bindDragEvents(e)}ngDoCheck(){let e=this.differ.diff(this.overlays);e&&this.map&&(e.forEachRemovedItem(e=>{google.maps.event.clearInstanceListeners(e.item),e.item.setMap(null)}),e.forEachAddedItem(e=>{e.item.setMap(this.map),e.item.addListener("click",n=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:n,overlay:e.item,map:this.map})})}),e.item.getDraggable()&&this.bindDragEvents(e.item)}))}bindDragEvents(e){e.addListener("dragstart",n=>{this.zone.run(()=>{this.onOverlayDragStart.emit({originalEvent:n,overlay:e,map:this.map})})}),e.addListener("drag",n=>{this.zone.run(()=>{this.onOverlayDrag.emit({originalEvent:n,overlay:e,map:this.map})})}),e.addListener("dragend",n=>{this.zone.run(()=>{this.onOverlayDragEnd.emit({originalEvent:n,overlay:e,map:this.map})})})}getMap(){return this.map}}return e.\u0275fac=function(n){return new(n||e)(s.Jb(s.l),s.Jb(s.s),s.Jb(s.h),s.Jb(s.z))},e.\u0275cmp=s.Db({type:e,selectors:[["p-gmap"]],inputs:{style:"style",styleClass:"styleClass",options:"options",overlays:"overlays"},outputs:{onMapClick:"onMapClick",onOverlayClick:"onOverlayClick",onOverlayDblClick:"onOverlayDblClick",onOverlayDragStart:"onOverlayDragStart",onOverlayDrag:"onOverlayDrag",onOverlayDragEnd:"onOverlayDragEnd",onMapReady:"onMapReady",onMapDragEnd:"onMapDragEnd",onZoomChanged:"onZoomChanged"},decls:1,vars:3,consts:[[3,"ngStyle"]],template:function(e,n){1&e&&s.Lb(0,"div",0),2&e&&(s.zb(n.styleClass),s.ic("ngStyle",n.style))},directives:[a.m],encapsulation:2,changeDetection:0}),e})(),c=(()=>{class e{}return e.\u0275mod=s.Hb({type:e}),e.\u0275inj=s.Gb({factory:function(n){return new(n||e)},imports:[[a.b]]}),e})();var g=t("q5e5"),d=t("WDBf"),m=t("Qx9H"),v=t("+jnZ"),y=t("OXhD"),h=t("mWoB"),u=t("46gc");const P=function(){return{"margin-top":".25em"}};function k(e,n){if(1&e){const e=s.Sb();s.Qb(0,"div",21),s.Qb(1,"div",22),s.Qb(2,"label",23),s.Ec(3,"Label"),s.Pb(),s.Pb(),s.Qb(4,"div",24),s.Qb(5,"input",25),s.Yb("ngModelChange",function(n){return s.vc(e),s.cc().markerTitle=n}),s.Pb(),s.Pb(),s.Qb(6,"div",22),s.Qb(7,"label",26),s.Ec(8,"Lat"),s.Pb(),s.Pb(),s.Qb(9,"div",24),s.Lb(10,"input",27),s.Pb(),s.Qb(11,"div",22),s.Qb(12,"label",28),s.Ec(13,"Lng"),s.Pb(),s.Pb(),s.Qb(14,"div",24),s.Lb(15,"input",29),s.Pb(),s.Qb(16,"div",22),s.Qb(17,"label",30),s.Ec(18,"Drag"),s.Pb(),s.Pb(),s.Qb(19,"div",24),s.Qb(20,"p-checkbox",31),s.Yb("ngModelChange",function(n){return s.vc(e),s.cc().draggable=n}),s.Pb(),s.Pb(),s.Pb()}if(2&e){const e=s.cc();s.xb(5),s.ic("ngModel",e.markerTitle),s.xb(5),s.ic("ngModel",e.selectedPosition.lat()),s.xb(5),s.ic("ngModel",e.selectedPosition.lng()),s.xb(5),s.Ac(s.kc(6,P)),s.ic("ngModel",e.draggable)}}function E(e,n){if(1&e){const e=s.Sb();s.Qb(0,"div"),s.Qb(1,"button",32),s.Yb("click",function(){return s.vc(e),s.cc().addMarker()}),s.Pb(),s.Pb()}}const M=function(){return{width:"100%",height:"320px","margin-bottom":"1em"}},f=function(){return{width:"300px"}};let Q=(()=>{class e{constructor(e){this.messageService=e}ngOnInit(){this.options={center:{lat:36.890257,lng:30.707417},zoom:12},this.initOverlays(),this.infoWindow=new google.maps.InfoWindow}handleMapClick(e){this.dialogVisible=!0,this.selectedPosition=e.latLng}handleOverlayClick(e){if(null!=e.overlay.getTitle){let n=e.overlay.getTitle();this.infoWindow.setContent("<div>"+n+"</div>"),this.infoWindow.open(e.map,e.overlay),e.map.setCenter(e.overlay.getPosition()),this.messageService.add({severity:"info",summary:"Marker Selected",detail:n})}else this.messageService.add({severity:"info",summary:"Shape Selected",detail:""})}addMarker(){this.overlays.push(new google.maps.Marker({position:{lat:this.selectedPosition.lat(),lng:this.selectedPosition.lng()},title:this.markerTitle,draggable:this.draggable})),this.markerTitle=null,this.dialogVisible=!1}handleDragEnd(e){this.messageService.add({severity:"info",summary:"Marker Dragged",detail:e.overlay.getTitle()})}initOverlays(){this.overlays&&this.overlays.length||(this.overlays=[new google.maps.Marker({position:{lat:36.879466,lng:30.667648},title:"Konyaalti"}),new google.maps.Marker({position:{lat:36.883707,lng:30.689216},title:"Ataturk Park"}),new google.maps.Marker({position:{lat:36.885233,lng:30.702323},title:"Oldtown"}),new google.maps.Polygon({paths:[{lat:36.9177,lng:30.7854},{lat:36.8851,lng:30.7802},{lat:36.8829,lng:30.8111},{lat:36.9177,lng:30.8159}],strokeOpacity:.5,strokeWeight:1,fillColor:"#1976D2",fillOpacity:.35}),new google.maps.Circle({center:{lat:36.90707,lng:30.56533},fillColor:"#1976D2",fillOpacity:.35,strokeWeight:1,radius:1500}),new google.maps.Polyline({path:[{lat:36.86149,lng:30.63743},{lat:36.86341,lng:30.72463}],geodesic:!0,strokeColor:"#FF0000",strokeOpacity:.5,strokeWeight:2})])}zoomIn(e){e.setZoom(e.getZoom()+1)}zoomOut(e){e.setZoom(e.getZoom()-1)}clear(){this.overlays=[]}}return e.\u0275fac=function(n){return new(n||e)(s.Jb(l.i))},e.\u0275cmp=s.Db({type:e,selectors:[["ng-component"]],features:[s.wb([l.i])],decls:233,vars:10,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","gmap"],[1,"content-section","implementation"],[1,"card"],[3,"options","overlays","onMapClick","onOverlayClick","onOverlayDragEnd"],["gmap",""],["type","button","pButton","","label","Clear","icon","pi pi-times",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom In","icon","pi pi-plus",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom Out","icon","pi pi-minus",3,"click"],["showEffect","fade","header","New Location",3,"visible","visibleChange"],["class","p-grid p-fluid",4,"ngIf"],["pTemplate","footer"],[1,"content-section","documentation"],["header","Documentation"],["lang","typescript"],["lang","markup"],[1,"doc-tablewrapper"],[1,"doc-table"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/gmap","target","_blank",1,"btn-viewsource"],[1,"p-grid","p-fluid"],[1,"p-col-2"],["for","title"],[1,"p-col-10"],["type","text","pInputText","","id","title",3,"ngModel","ngModelChange"],["for","lat"],["id","lat","type","text","readonly","","pInputText","",3,"ngModel"],["for","lng"],["id","lng","type","text","readonly","","pInputText","",3,"ngModel"],["for","drg"],["binary","true",3,"ngModel","ngModelChange"],["type","button","pButton","","label","Add Marker","icon","pi pi-plus",3,"click"]],template:function(e,n){if(1&e){const e=s.Sb();s.Qb(0,"div",0),s.Qb(1,"div",1),s.Qb(2,"h1"),s.Ec(3,"GMap"),s.Pb(),s.Qb(4,"p"),s.Ec(5,"GMap component provides integration with Google Maps API. This sample demontrates various uses cases like binding, overlays and events. Click the map to add a new item."),s.Pb(),s.Pb(),s.Lb(6,"app-demoActions",2),s.Pb(),s.Qb(7,"div",3),s.Lb(8,"p-toast"),s.Qb(9,"div",4),s.Qb(10,"p-gmap",5,6),s.Yb("onMapClick",function(e){return n.handleMapClick(e)})("onOverlayClick",function(e){return n.handleOverlayClick(e)})("onOverlayDragEnd",function(e){return n.handleDragEnd(e)}),s.Pb(),s.Qb(12,"button",7),s.Yb("click",function(){return n.clear()}),s.Pb(),s.Qb(13,"button",8),s.Yb("click",function(){s.vc(e);const t=s.uc(11);return n.zoomIn(t.getMap())}),s.Pb(),s.Qb(14,"button",9),s.Yb("click",function(){s.vc(e);const t=s.uc(11);return n.zoomOut(t.getMap())}),s.Pb(),s.Qb(15,"p-dialog",10),s.Yb("visibleChange",function(e){return n.dialogVisible=e}),s.Cc(16,k,21,7,"div",11),s.Cc(17,E,2,0,"ng-template",12),s.Pb(),s.Pb(),s.Pb(),s.Qb(18,"div",13),s.Qb(19,"p-tabView"),s.Qb(20,"p-tabPanel",14),s.Qb(21,"h5"),s.Ec(22,"Import"),s.Pb(),s.Qb(23,"app-code",15),s.Kb(),s.Ec(24,"\nimport {GMapModule} from 'primeng/gmap';\n"),s.Rb(),s.Pb(),s.Qb(25,"h5"),s.Ec(26,"Getting Started"),s.Pb(),s.Qb(27,"p"),s.Ec(28,"A map is initialized with options and dimensions. Refer to the google maps api for the list of available options."),s.Pb(),s.Qb(29,"app-code",16),s.Kb(),s.Ec(30,"\n<p-gmap [options]=\"options\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),s.Rb(),s.Pb(),s.Qb(31,"app-code",15),s.Kb(),s.Ec(32,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n}\n"),s.Rb(),s.Pb(),s.Qb(33,"h5"),s.Ec(34,"Overlays"),s.Pb(),s.Qb(35,"p"),s.Ec(36,"GMap can display any type of overlay such as markers, polygons and circles. Overlay instances are bound using the overlays property array. Overlays are aware of one-way binding so whenever the array changes, gmap updates itself."),s.Pb(),s.Qb(37,"app-code",16),s.Kb(),s.Ec(38,"\n<p-gmap [options]=\"options\" [overlays]=\"overlays\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),s.Rb(),s.Pb(),s.Qb(39,"app-code",15),s.Kb(),s.Ec(40,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n}\n"),s.Rb(),s.Pb(),s.Qb(41,"h5"),s.Ec(42,"Events"),s.Pb(),s.Qb(43,"p"),s.Ec(44,"GMap provides common callbacks to hook into events including map click, overlay click and overlay dragging."),s.Pb(),s.Qb(45,"app-code",16),s.Kb(),s.Ec(46,'\n<p-gmap [options]="options" [overlays]="overlays" [style]="{\'width\':\'100%\',\'height\':\'320px\'}"\n            (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)"></p-gmap>\n'),s.Rb(),s.Pb(),s.Qb(47,"app-code",15),s.Kb(),s.Ec(48,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n\n    handleMapClick(event) {\n        //event: MouseEvent of Google Maps api\n    }\n\n    handleOverlayClick(event) {\n        //event.originalEvent: MouseEvent of Google Maps api\n        //event.overlay: Clicked overlay\n        //event.map: Map instance\n    }\n}\n"),s.Rb(),s.Pb(),s.Qb(49,"h5"),s.Ec(50,"Google Maps API"),s.Pb(),s.Qb(51,"p"),s.Ec(52,"In case you need to access the map instance directly, use the getMap() method."),s.Pb(),s.Qb(53,"app-code",16),s.Kb(),s.Ec(54,'\n<p-gmap #gmap [options]="options"></p-gmap>\n\n<button type="button" pButton label="Zoom In" icon="pi-search-plus" (click)="zoomIn(gmap.getMap())"></button>\n'),s.Rb(),s.Pb(),s.Qb(55,"app-code",15),s.Kb(),s.Ec(56,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n}\n"),s.Rb(),s.Pb(),s.Qb(57,"p"),s.Ec(58,"Another option is to to get the map object directly after init via (onMapReady) event. In the example below, google.maps.Map is used for adjusting map bounds to markers."),s.Pb(),s.Qb(59,"app-code",16),s.Kb(),s.Ec(60,'\n<p-gmap #gmap [options]="options" [overlays]="overlays" [style]="mapStyle"\n    (onMapReady)="setMap($event)"></p-gmap>\n'),s.Rb(),s.Pb(),s.Qb(61,"p"),s.Ec(62,"Then from your component you would write"),s.Pb(),s.Qb(63,"app-code",15),s.Kb(),s.Ec(64,'\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    map: google.maps.Map;\n\n    setMap(event) {\n        this.map = event.map;\n    }\n\n    ngOnInit() {\n        let bounds = new google.maps.LatLngBounds();\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:"Konyaalti"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:"Ataturk Park"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:"Oldtown"}),\n        ]\n        // ... extend bounds\n        this.overlays.forEach(marker => {\n            bounds.extend(marker.getPosition());\n        });\n\n        setTimeout(()=> { // map will need some time to load\n            this.map.fitBounds(bounds); // Map object used directly\n        }, 1000);\n    }\n}\n'),s.Rb(),s.Pb(),s.Qb(65,"h5"),s.Ec(66,"Properties"),s.Pb(),s.Qb(67,"div",17),s.Qb(68,"table",18),s.Qb(69,"thead"),s.Qb(70,"tr"),s.Qb(71,"th"),s.Ec(72,"Name"),s.Pb(),s.Qb(73,"th"),s.Ec(74,"Type"),s.Pb(),s.Qb(75,"th"),s.Ec(76,"Default"),s.Pb(),s.Qb(77,"th"),s.Ec(78,"Description"),s.Pb(),s.Pb(),s.Pb(),s.Qb(79,"tbody"),s.Qb(80,"tr"),s.Qb(81,"td"),s.Ec(82,"options"),s.Pb(),s.Qb(83,"td"),s.Ec(84,"any"),s.Pb(),s.Qb(85,"td"),s.Ec(86,"null"),s.Pb(),s.Qb(87,"td"),s.Ec(88,"Google Maps API configuration object."),s.Pb(),s.Pb(),s.Qb(89,"tr"),s.Qb(90,"td"),s.Ec(91,"overlays"),s.Pb(),s.Qb(92,"td"),s.Ec(93,"array"),s.Pb(),s.Qb(94,"td"),s.Ec(95,"null"),s.Pb(),s.Qb(96,"td"),s.Ec(97,"An array of overlays to display."),s.Pb(),s.Pb(),s.Qb(98,"tr"),s.Qb(99,"td"),s.Ec(100,"style"),s.Pb(),s.Qb(101,"td"),s.Ec(102,"string"),s.Pb(),s.Qb(103,"td"),s.Ec(104,"null"),s.Pb(),s.Qb(105,"td"),s.Ec(106,"Inline style of the component."),s.Pb(),s.Pb(),s.Qb(107,"tr"),s.Qb(108,"td"),s.Ec(109,"styleClass"),s.Pb(),s.Qb(110,"td"),s.Ec(111,"string"),s.Pb(),s.Qb(112,"td"),s.Ec(113,"null"),s.Pb(),s.Qb(114,"td"),s.Ec(115,"Style class of the component."),s.Pb(),s.Pb(),s.Pb(),s.Pb(),s.Pb(),s.Qb(116,"h5"),s.Ec(117,"Events"),s.Pb(),s.Qb(118,"div",17),s.Qb(119,"table",18),s.Qb(120,"thead"),s.Qb(121,"tr"),s.Qb(122,"th"),s.Ec(123,"Name"),s.Pb(),s.Qb(124,"th"),s.Ec(125,"Parameters"),s.Pb(),s.Qb(126,"th"),s.Ec(127,"Description"),s.Pb(),s.Pb(),s.Pb(),s.Qb(128,"tbody"),s.Qb(129,"tr"),s.Qb(130,"td"),s.Ec(131,"onMapClick"),s.Pb(),s.Qb(132,"td"),s.Ec(133,"event: Google Maps MouseEvent"),s.Pb(),s.Qb(134,"td"),s.Ec(135,"Callback to invoke when map is clicked except markers."),s.Pb(),s.Pb(),s.Qb(136,"tr"),s.Qb(137,"td"),s.Ec(138,"onMapDragEnd"),s.Pb(),s.Qb(139,"td"),s.Ec(140,"originalEvent: Google Maps dragend"),s.Lb(141,"br"),s.Pb(),s.Qb(142,"td"),s.Ec(143,"Callback to invoke when map drag (i.e. pan) has ended."),s.Pb(),s.Pb(),s.Qb(144,"tr"),s.Qb(145,"td"),s.Ec(146,"onMapReady"),s.Pb(),s.Qb(147,"td"),s.Ec(148,"event.map: Google Maps Instance"),s.Pb(),s.Qb(149,"td"),s.Ec(150,"Callback to invoke when the map is ready to be used."),s.Pb(),s.Pb(),s.Qb(151,"tr"),s.Qb(152,"td"),s.Ec(153,"onOverlayClick"),s.Pb(),s.Qb(154,"td"),s.Ec(155,"originalEvent: Google Maps MouseEvent "),s.Lb(156,"br"),s.Ec(157," overlay: Clicked overlay "),s.Lb(158,"br"),s.Ec(159," map: Map instance "),s.Lb(160,"br"),s.Pb(),s.Qb(161,"td"),s.Ec(162,"Callback to invoke when an overlay is clicked."),s.Pb(),s.Pb(),s.Qb(163,"tr"),s.Qb(164,"td"),s.Ec(165,"onOverlayDblClick"),s.Pb(),s.Qb(166,"td"),s.Ec(167,"originalEvent: Google Maps MouseEvent "),s.Lb(168,"br"),s.Ec(169," overlay: Clicked overlay "),s.Lb(170,"br"),s.Ec(171," map: Map instance "),s.Lb(172,"br"),s.Pb(),s.Qb(173,"td"),s.Ec(174,"Callback to invoke when an overlay is double clicked."),s.Pb(),s.Pb(),s.Qb(175,"tr"),s.Qb(176,"td"),s.Ec(177,"onOverlayDrag"),s.Pb(),s.Qb(178,"td"),s.Ec(179,"originalEvent: Google Maps MouseEvent "),s.Lb(180,"br"),s.Ec(181," overlay: Clicked overlay "),s.Lb(182,"br"),s.Ec(183," map: Map instance "),s.Lb(184,"br"),s.Pb(),s.Qb(185,"td"),s.Ec(186,"Callback to invoke when an overlay is being dragged."),s.Pb(),s.Pb(),s.Qb(187,"tr"),s.Qb(188,"td"),s.Ec(189,"onOverlayDragEnd"),s.Pb(),s.Qb(190,"td"),s.Ec(191,"originalEvent: Google Maps MouseEvent "),s.Lb(192,"br"),s.Ec(193," overlay: Clicked overlay "),s.Lb(194,"br"),s.Ec(195," map: Map instance "),s.Lb(196,"br"),s.Pb(),s.Qb(197,"td"),s.Ec(198,"Callback to invoke when an overlay drag ends."),s.Pb(),s.Pb(),s.Qb(199,"tr"),s.Qb(200,"td"),s.Ec(201,"onOverlayDragStart"),s.Pb(),s.Qb(202,"td"),s.Ec(203,"originalEvent: Google Maps MouseEvent "),s.Lb(204,"br"),s.Ec(205," overlay: Clicked overlay "),s.Lb(206,"br"),s.Ec(207," map: Map instance "),s.Lb(208,"br"),s.Pb(),s.Qb(209,"td"),s.Ec(210,"Callback to invoke when an overlay drag starts."),s.Pb(),s.Pb(),s.Qb(211,"tr"),s.Qb(212,"td"),s.Ec(213,"onZoomChanged"),s.Pb(),s.Qb(214,"td"),s.Ec(215,"originalEvent: Google Maps zoom_changed"),s.Pb(),s.Qb(216,"td"),s.Ec(217,"Callback to invoke when zoom level has changed."),s.Pb(),s.Pb(),s.Pb(),s.Pb(),s.Pb(),s.Qb(218,"h5"),s.Ec(219,"Dependencies"),s.Pb(),s.Qb(220,"p"),s.Ec(221,"Google Maps API."),s.Pb(),s.Pb(),s.Qb(222,"p-tabPanel",19),s.Qb(223,"a",20),s.Qb(224,"span"),s.Ec(225,"View on GitHub"),s.Pb(),s.Pb(),s.Qb(226,"app-code",16),s.Kb(),s.Ec(227,'\n<p-toast [style]="{marginTop: \'80px\'}"></p-toast>\n\n<p-gmap #gmap [style]="{\'width\':\'100%\',\'height\':\'320px\', \'margin-bottom\': \'1em\'}" [options]="options" [overlays]="overlays"\n       (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)" (onOverlayDragEnd)="handleDragEnd($event)"></p-gmap>\n\n<button type="button" pButton label="Clear" icon="pi pi-times" (click)="clear()" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom In" icon="pi pi-plus" (click)="zoomIn(gmap.getMap())" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom Out" icon="pi pi-minus" (click)="zoomOut(gmap.getMap())"></button>\n\n<p-dialog showEffect="fade" [(visible)]="dialogVisible" header="New Location" [style]="{width: \'300px\'}">>\n    <div class="p-grid p-fluid" *ngIf="selectedPosition">\n        <div class="p-col-2"><label for="title">Label</label></div>\n        <div class="p-col-10"><input type="text" pInputText id="title" [(ngModel)]="markerTitle"></div>\n\n        <div class="p-col-2"><label for="lat">Lat</label></div>\n        <div class="p-col-10"><input id="lat" type="text" readonly pInputText [ngModel]="selectedPosition.lat()"></div>\n\n        <div class="p-col-2"><label for="lng">Lng</label></div>\n        <div class="p-col-10"><input id="lng" type="text" readonly pInputText [ngModel]="selectedPosition.lng()"></div>\n\n        <div class="p-col-2"><label for="drg">Drag</label></div>\n        <div class="p-col-10"><p-checkbox [(ngModel)]="draggable" binary="true" [style]="{\'margin-top\':\'.25em\'}"></p-checkbox></div>\n    </div>\n    <ng-template pTemplate="footer">\n        <div>\n            <button type="button" pButton label="Add Marker" icon="pi-plus" (click)="addMarker()"></button>\n        </div>\n    </ng-template>\n</p-dialog>\n'),s.Rb(),s.Pb(),s.Qb(228,"app-code",15),s.Kb(),s.Ec(229,"\nexport class GMapDemo implements OnInit {\n\n    options: any;\n\n    overlays: any[];\n\n    dialogVisible: boolean;\n\n    markerTitle: string;\n\n    selectedPosition: any;\n\n    infoWindow: any;\n\n    draggable: boolean;\n\n    constructor(private messageService: MessageService) {}\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.initOverlays();\n\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n\n    handleMapClick(event) {\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n    }\n\n    handleOverlayClick(event) {\n        let isMarker = event.overlay.getTitle != undefined;\n\n        if (isMarker) {\n            let title = event.overlay.getTitle();\n            this.infoWindow.setContent('"),s.Qb(230,"div"),s.Ec(231,"' + title + '"),s.Pb(),s.Ec(232,"');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n\n            this.messageService.add({severity:'info', summary:'Marker Selected', detail: title});\n        }\n        else {\n            this.messageService.add({severity:'info', summary:'Shape Selected', detail: ''});\n        }\n    }\n\n    addMarker() {\n        this.overlays.push(new google.maps.Marker({position:{lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()}, title:this.markerTitle, draggable: this.draggable}));\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    }\n\n    handleDragEnd(event) {\n        this.messageService.add({severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()});\n    }\n\n    initOverlays() {\n        if (!this.overlays||!this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n                new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n                new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n                new google.maps.Polygon({paths: [\n                    {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n                }),\n                new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n                new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n            ];\n        }\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n\n    zoomOut(map) {\n        map.setZoom(map.getZoom()-1);\n    }\n\n    clear() {\n        this.overlays = [];\n    }\n}\n"),s.Rb(),s.Pb(),s.Pb(),s.Pb(),s.Pb()}2&e&&(s.xb(10),s.Ac(s.kc(8,M)),s.ic("options",n.options)("overlays",n.overlays),s.xb(5),s.Ac(s.kc(9,f)),s.ic("visible",n.dialogVisible),s.xb(1),s.ic("ngIf",n.selectedPosition))},directives:[r.a,b.a,p,g.b,d.a,a.l,m.c,v.b,v.a,y.a,o.a,h.a,o.f,o.i,u.a],styles:[".p-col-2[_ngcontent-%COMP%] {\n            display: flex;\n            align-self: center;\n        }"]}),e})(),w=(()=>{class e{}return e.\u0275mod=s.Hb({type:e}),e.\u0275inj=s.Gb({factory:function(n){return new(n||e)},imports:[[i.g.forChild([{path:"",component:Q}])],i.g]}),e})();var C=t("2Go5"),O=t("yxpR"),D=t("G8Ro"),x=t("Uxlh"),L=t("rklm"),I=t("faTn");let z=(()=>{class e{}return e.\u0275mod=s.Hb({type:e}),e.\u0275inj=s.Gb({factory:function(n){return new(n||e)},imports:[[a.b,o.b,w,c,C.a,x.a,O.a,D.a,L.a,I.a,y.b,r.b]]}),e})()}}]);